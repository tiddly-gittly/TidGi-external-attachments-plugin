title: $:/plugins/linonetwo/tidgi-external-attachments/readme/en-GB

!！ Introduction

This plugin provides support for importing tiddlers as external attachments.

On the TidGi App, you can choose to import the binary large file as a 'reference tiddler', which means that the tiddler will refer to the original file via the ''_canonical_uri'' field, while itself will be almost an empty file, thus saving storage space in the Wiki. This reduces the size of the wiki and thus improves performance. However, it does mean that the wiki is no longer fully self-contained.

!！ Compatibility

This plugin only works when using TiddlyWiki with platforms such as TiddlyDesktop/TidGi Desktop that support the ''path'' attribute for imported/dragged files (provided by app).

!! Attachment

For `_canonical_uri`, it is recommended ''not'' to add the `file://` prefix because the web page does not support the `file://` prefix. Adding it will cause image attachments to fail to load when deployed to the web page blog.

```tid
_canonical_uri: files/A File.pdf
```

!! Link

The link needs to add the `file://` prefix so that you can click the link in the Taiji App to directly open the file. Without the prefix, Tiddlywiki cannot recognize it as an external file link and will think it is an internal Wiki link, resulting in failure to open. 

!!! Absolute `file://` link

TidGi supports link and `_canonical_uri` to use `file://` prefix (or `open://`, both works the same), for example:

```wikitext
[ext[Some External File Link with CJK character|file:///Users/linonetwo/Downloads/(OCRed)奖励的惩罚 (（美）科恩著) (Z-Library).pdf]]

[ext[An External Folder Link|file:///Users/linonetwo/Downloads/]]
```

So when you drag a file into TidGi app, `_canonical_uri` created by this plugin will also prefixed by `file://`.

This prefix looks like `file:///` because absolute paths usually start with `/`, plus two slashes for `file://`, so it looks like three slashes.

!!! Relative `file://` link

TidGi also supports relative path in your wiki folder. Starting with `file://` and directly followed by a folder name or file name is a relative path, e.g:

```wikitext
[ext[PDF in the files folder|file://files/A File.pdf]]

[ext[Open the tiddlers folder|file://tiddlers/]]
```

You can also use `. /` to explicitly indicate that this is a relative path:

```wikitext
[ext[PDF in the files folder|file://./files/A File.pdf]]

[ext[Open the tiddlers folder|file://./tiddlers/]]
```

{{$:/plugins/linonetwo/tidgi-external-attachments/settings/en-GB-desc}}